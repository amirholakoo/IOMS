"""
ðŸ§ª ØªØ³Øªâ€ŒÙ‡Ø§ÛŒ Ù¾Ø§ÛŒÙ‡ - HomayOMS
ðŸ“‹ ØªØ³Øªâ€ŒÙ‡Ø§ÛŒ Ø§Ø¨ØªØ¯Ø§ÛŒÛŒ Ø¨Ø±Ø§ÛŒ Ø§Ø·Ù…ÛŒÙ†Ø§Ù† Ø§Ø² ØµØ­Øª ØªÙ†Ø¸ÛŒÙ…Ø§Øª
"""

import pytest
from django.test import TestCase
from django.contrib.auth import get_user_model

User = get_user_model()


class TestBasicSetup(TestCase):
    """ðŸ”§ ØªØ³Øªâ€ŒÙ‡Ø§ÛŒ ØªÙ†Ø¸ÛŒÙ…Ø§Øª Ù¾Ø§ÛŒÙ‡"""

    def test_user_model_exists(self):
        """ðŸ‘¤ ØªØ³Øª ÙˆØ¬ÙˆØ¯ Ù…Ø¯Ù„ User"""
        self.assertTrue(User)
        self.assertEqual(User.__name__, 'User')

    def test_create_simple_user(self):
        """ðŸ‘¤ ØªØ³Øª Ø§ÛŒØ¬Ø§Ø¯ Ú©Ø§Ø±Ø¨Ø± Ø³Ø§Ø¯Ù‡"""
        user = User.objects.create_user(
            username='test_user',
            email='test@example.com',
            phone='09123456789',
            password='test123'
        )
        self.assertEqual(user.username, 'test_user')
        self.assertEqual(user.email, 'test@example.com')
        self.assertEqual(user.phone, '09123456789')

    def test_user_roles(self):
        """ðŸŽ­ ØªØ³Øª Ù†Ù‚Ø´â€ŒÙ‡Ø§ÛŒ Ú©Ø§Ø±Ø¨Ø±"""
        roles = [choice[0] for choice in User.UserRole.choices]
        expected_roles = ['super_admin', 'admin', 'finance', 'customer']
        
        for role in expected_roles:
            self.assertIn(role, roles)


@pytest.mark.unit
def test_pytest_working():
    """ðŸ§ª ØªØ³Øª Ø¹Ù…Ù„Ú©Ø±Ø¯ pytest"""
    assert True


@pytest.mark.unit  
def test_django_integration():
    """ðŸ”— ØªØ³Øª ÛŒÚ©Ù¾Ø§Ø±Ú†Ú¯ÛŒ Django"""
    from django.conf import settings
    assert settings.configured 