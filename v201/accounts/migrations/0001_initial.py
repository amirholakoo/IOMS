# Generated by Django 5.2.3 on 2025-06-27 13:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='تاریخ و زمان ایجاد رکورد به صورت خودکار ثبت می\u200cشود', verbose_name='📅 تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='تاریخ و زمان آخرین به\u200cروزرسانی رکورد به صورت خودکار ثبت می\u200cشود', verbose_name='🔄 تاریخ به\u200cروزرسانی')),
                ('role', models.CharField(choices=[('super_admin', '🔴 Super Admin'), ('admin', '🟡 Admin'), ('finance', '🟢 Finance')], default='admin', help_text='نقش کاربر که سطح دسترسی او را تعیین می\u200cکند', max_length=20, verbose_name='🎭 نقش کاربری')),
                ('status', models.CharField(choices=[('active', '✅ فعال'), ('inactive', '❌ غیرفعال'), ('suspended', '⏸️ معلق'), ('pending', '⏳ در انتظار تأیید')], default='pending', help_text='وضعیت فعلی کاربر در سیستم', max_length=20, verbose_name='📊 وضعیت کاربر')),
                ('phone', models.CharField(help_text='شماره تلفن همراه برای احراز هویت و تماس', max_length=15, unique=True, verbose_name='📞 شماره تلفن')),
                ('department', models.CharField(blank=True, help_text='بخش یا واحد کاری کاربر', max_length=100, verbose_name='🏢 بخش')),
                ('notes', models.TextField(blank=True, help_text='یادداشت\u200cها و توضیحات اضافی درباره کاربر', verbose_name='📝 یادداشت\u200cها')),
                ('last_activity', models.DateTimeField(blank=True, help_text='زمان آخرین فعالیت کاربر در سیستم', null=True, verbose_name='⏰ آخرین فعالیت')),
                ('password_expires_at', models.DateTimeField(blank=True, help_text='تاریخ انقضای رمز عبور کاربر', null=True, verbose_name='🔐 انقضای رمز عبور')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '👤 کاربر',
                'verbose_name_plural': '👥 کاربران',
                'ordering': ['-created_at'],
                'permissions': [('manage_all_users', 'مدیریت کامل کاربران'), ('access_all_data', 'دسترسی به تمام داده\u200cها'), ('system_settings', 'تنظیمات سیستم'), ('backup_restore', 'پشتیبان\u200cگیری و بازگردانی'), ('manage_customers', 'مدیریت مشتریان'), ('manage_orders', 'مدیریت سفارشات'), ('manage_inventory', 'مدیریت موجودی'), ('view_reports', 'مشاهده گزارش\u200cها'), ('manage_business_hours', 'مدیریت ساعات کاری'), ('manage_prices', 'مدیریت قیمت\u200cها'), ('manage_invoices', 'مدیریت فاکتورها'), ('view_financial_reports', 'گزارش\u200cهای مالی'), ('manage_payments', 'مدیریت پرداخت\u200cها'), ('export_financial_data', 'خروجی داده\u200cهای مالی')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='تاریخ و زمان ایجاد رکورد به صورت خودکار ثبت می\u200cشود', verbose_name='📅 تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='تاریخ و زمان آخرین به\u200cروزرسانی رکورد به صورت خودکار ثبت می\u200cشود', verbose_name='🔄 تاریخ به\u200cروزرسانی')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='⏰ زمان ورود')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='⏰ زمان خروج')),
                ('ip_address', models.GenericIPAddressField(verbose_name='🌐 آدرس IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='🖥️ مشخصات مرورگر')),
                ('is_active', models.BooleanField(default=True, verbose_name='✅ فعال')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL, verbose_name='👤 کاربر')),
            ],
            options={
                'verbose_name': '📱 نشست کاربر',
                'verbose_name_plural': '📱 نشست\u200cهای کاربران',
                'ordering': ['-login_time'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='accounts_us_role_1fa9a5_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['status'], name='accounts_us_status_6bbe13_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone'], name='accounts_us_phone_f54457_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='accounts_us_usernam_c0ea66_idx'),
        ),
    ]
