# 🐳 Docker Compose برای HomayOMS v200 - Raspberry Pi Production
# 🏗️ Optimized for ARM architecture and production deployment

version: '3.8'

services:
  # 🐘 PostgreSQL Database (ARM optimized)
  db:
    image: postgres:15-alpine
    container_name: homayoms_v200_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-homayoms_v200_db}
      POSTGRES_USER: ${DB_USER:-homayoms_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-homayoms_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_backups:/backups
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - homayoms_v200_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-homayoms_user} -d ${DB_NAME:-homayoms_v200_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # 🐘 pgAdmin - مدیریت پایگاه داده (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: homayoms_v200_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@homayoms.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - homayoms_v200_network
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    profiles:
      - admin  # Only start when explicitly requested

  # 🐍 Django Web Application (Production)
  web:
    build:
      context: .
      dockerfile: Dockerfile.raspberry
    container_name: homayoms_v200_web
    restart: unless-stopped
    environment:
      # 🔐 تنظیمات امنیتی
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      DEBUG: 'False'  # Production mode
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0,192.168.1.0/24}
      
      # 🗄️ تنظیمات پایگاه داده
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-homayoms_v200_db}
      DB_USER: ${DB_USER:-homayoms_user}
      DB_PASSWORD: ${DB_PASSWORD:-homayoms_password}
      DATABASE_URL: postgresql://${DB_USER:-homayoms_user}:${DB_PASSWORD:-homayoms_password}@db:5432/${DB_NAME:-homayoms_v200_db}
      
      # 🌐 تنظیمات CORS
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:8000,http://127.0.0.1:8000,http://192.168.1.0/24}
      
      # 📧 تنظیمات ایمیل (اختیاری)
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-True}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:-}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:-}
      
      # ⏰ تنظیمات timezone
      TIME_ZONE: ${TIME_ZONE:-Asia/Tehran}
      LANGUAGE_CODE: ${LANGUAGE_CODE:-fa-ir}
      
      # 📁 تنظیمات فایل‌ها
      STATIC_URL: /static/
      STATIC_ROOT: /app/staticfiles
      MEDIA_URL: /media/
      MEDIA_ROOT: /app/media
      
      # 🔧 تنظیمات Django
      DJANGO_SETTINGS_MODULE: HomayOMS.settings.production
      TYPE: production
      
      # 📱 تنظیمات SMS Server (Raspberry Pi local)
      SMS_SERVER_URL: ${SMS_SERVER_URL:-http://host.docker.internal:5003}
      SMS_API_KEY: ${SMS_API_KEY:-ioms_sms_server_2025}
      SMS_TIMEOUT: ${SMS_TIMEOUT:-30}
      SMS_RETRY_ATTEMPTS: ${SMS_RETRY_ATTEMPTS:-3}
      SMS_FALLBACK_TO_FAKE: 'False'  # Production - no fake SMS
      
      # 📊 تنظیمات لاگ‌گیری و مانیتورینگ
      LOG_LEVEL: ${LOG_LEVEL:-WARNING}
      LOG_FILE_PATH: /app/logs
      ENABLE_HEALTH_CHECKS: 'True'
      ENABLE_METRICS: 'True'
      
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
      - ./csv_logs:/app/csv_logs
    ports:
      - "${WEB_PORT:-8000}:8000"
    networks:
      - homayoms_v200_network
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  # 🔄 Nginx Reverse Proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: homayoms_v200_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - homayoms_v200_network
    depends_on:
      web:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    profiles:
      - nginx  # Only start when explicitly requested

# 📦 Volumes برای ذخیره داده‌ها
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

# 🌐 Network برای ارتباط بین سرویس‌ها
networks:
  homayoms_v200_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 